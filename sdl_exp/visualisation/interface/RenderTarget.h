#ifndef __RenderTarget_h__
#define __RenderTarget_h__

#include "../util/GLcheck.h"
#include <glm/vec2.hpp>

/**
 * Interface shared by RenderBuffer, Texture2D and Texture2D_Multisample
 * These are the 3 classes which can be rendered too in a frag shader
 */
class RenderTarget
{
public:
	virtual ~RenderTarget()
    { }
    /**
     * Resizes the object
     * @parma width The new width
     * @parma height The new height
     */
    virtual void resize(const unsigned int &width, const unsigned int &height) { resize({ width, height }); }
	/**
	 * Resizes the object
	 * @parma dimensions The new dimensions
	 */
	virtual void resize(const glm::uvec2 &dimensions) = 0;
	/**
	 * Returns the OpenGL allocated name as generated by glGenTextures() or similar
	 */
	virtual GLenum getName() const = 0;
};

#endif //__RenderTarget_h__