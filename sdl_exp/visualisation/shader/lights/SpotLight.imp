#include "Spotlight.h"
#include "LightsBuffer.h"

inline SpotLight::SpotLight(const PointLight &old)
	: PointLight(old)
{ }

inline SpotLight::SpotLight(LightProperties * const props, LightsBuffer::TLightProperties * const tProps, unsigned int index, bool init)
	: PointLight(props, tProps, index, init)
{
	if(init)
	{
		tProperties->spotCutoff = 45.0f;//Set the spotlight setting
		properties->spotCosCutoff = cos(tProperties->spotCutoff);
	}
}

inline void SpotLight::Direction(const glm::vec3 &dir)
{
	tProperties->spotDirection = glm::vec4(dir, 0.0f);
}
inline void SpotLight::CutOff(const float &degrees)
{
	tProperties->spotCutoff = degrees;
	properties->spotCosCutoff = cos(tProperties->spotCutoff);
}
inline void SpotLight::Exponent(const float &exponent)
{
	properties->spotExponent = exponent;
}